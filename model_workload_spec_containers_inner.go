/*
RIK API

RESTful public-facing API. The API is accessible through HTTP calls on specific URLs carrying JSON modeled data. 

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the WorkloadSpecContainersInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &WorkloadSpecContainersInner{}

// WorkloadSpecContainersInner struct for WorkloadSpecContainersInner
type WorkloadSpecContainersInner struct {
	Name *string `json:"name,omitempty"`
	Image *string `json:"image,omitempty"`
	Env []ContainerWorkloadContainersInnerEnvInner `json:"env,omitempty"`
	Ports *ContainerWorkloadContainersInnerNetwork `json:"ports,omitempty"`
}

// NewWorkloadSpecContainersInner instantiates a new WorkloadSpecContainersInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWorkloadSpecContainersInner() *WorkloadSpecContainersInner {
	this := WorkloadSpecContainersInner{}
	return &this
}

// NewWorkloadSpecContainersInnerWithDefaults instantiates a new WorkloadSpecContainersInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWorkloadSpecContainersInnerWithDefaults() *WorkloadSpecContainersInner {
	this := WorkloadSpecContainersInner{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *WorkloadSpecContainersInner) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkloadSpecContainersInner) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *WorkloadSpecContainersInner) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *WorkloadSpecContainersInner) SetName(v string) {
	o.Name = &v
}

// GetImage returns the Image field value if set, zero value otherwise.
func (o *WorkloadSpecContainersInner) GetImage() string {
	if o == nil || IsNil(o.Image) {
		var ret string
		return ret
	}
	return *o.Image
}

// GetImageOk returns a tuple with the Image field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkloadSpecContainersInner) GetImageOk() (*string, bool) {
	if o == nil || IsNil(o.Image) {
		return nil, false
	}
	return o.Image, true
}

// HasImage returns a boolean if a field has been set.
func (o *WorkloadSpecContainersInner) HasImage() bool {
	if o != nil && !IsNil(o.Image) {
		return true
	}

	return false
}

// SetImage gets a reference to the given string and assigns it to the Image field.
func (o *WorkloadSpecContainersInner) SetImage(v string) {
	o.Image = &v
}

// GetEnv returns the Env field value if set, zero value otherwise.
func (o *WorkloadSpecContainersInner) GetEnv() []ContainerWorkloadContainersInnerEnvInner {
	if o == nil || IsNil(o.Env) {
		var ret []ContainerWorkloadContainersInnerEnvInner
		return ret
	}
	return o.Env
}

// GetEnvOk returns a tuple with the Env field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkloadSpecContainersInner) GetEnvOk() ([]ContainerWorkloadContainersInnerEnvInner, bool) {
	if o == nil || IsNil(o.Env) {
		return nil, false
	}
	return o.Env, true
}

// HasEnv returns a boolean if a field has been set.
func (o *WorkloadSpecContainersInner) HasEnv() bool {
	if o != nil && !IsNil(o.Env) {
		return true
	}

	return false
}

// SetEnv gets a reference to the given []ContainerWorkloadContainersInnerEnvInner and assigns it to the Env field.
func (o *WorkloadSpecContainersInner) SetEnv(v []ContainerWorkloadContainersInnerEnvInner) {
	o.Env = v
}

// GetPorts returns the Ports field value if set, zero value otherwise.
func (o *WorkloadSpecContainersInner) GetPorts() ContainerWorkloadContainersInnerNetwork {
	if o == nil || IsNil(o.Ports) {
		var ret ContainerWorkloadContainersInnerNetwork
		return ret
	}
	return *o.Ports
}

// GetPortsOk returns a tuple with the Ports field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkloadSpecContainersInner) GetPortsOk() (*ContainerWorkloadContainersInnerNetwork, bool) {
	if o == nil || IsNil(o.Ports) {
		return nil, false
	}
	return o.Ports, true
}

// HasPorts returns a boolean if a field has been set.
func (o *WorkloadSpecContainersInner) HasPorts() bool {
	if o != nil && !IsNil(o.Ports) {
		return true
	}

	return false
}

// SetPorts gets a reference to the given ContainerWorkloadContainersInnerNetwork and assigns it to the Ports field.
func (o *WorkloadSpecContainersInner) SetPorts(v ContainerWorkloadContainersInnerNetwork) {
	o.Ports = &v
}

func (o WorkloadSpecContainersInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o WorkloadSpecContainersInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Image) {
		toSerialize["image"] = o.Image
	}
	if !IsNil(o.Env) {
		toSerialize["env"] = o.Env
	}
	if !IsNil(o.Ports) {
		toSerialize["ports"] = o.Ports
	}
	return toSerialize, nil
}

type NullableWorkloadSpecContainersInner struct {
	value *WorkloadSpecContainersInner
	isSet bool
}

func (v NullableWorkloadSpecContainersInner) Get() *WorkloadSpecContainersInner {
	return v.value
}

func (v *NullableWorkloadSpecContainersInner) Set(val *WorkloadSpecContainersInner) {
	v.value = val
	v.isSet = true
}

func (v NullableWorkloadSpecContainersInner) IsSet() bool {
	return v.isSet
}

func (v *NullableWorkloadSpecContainersInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWorkloadSpecContainersInner(val *WorkloadSpecContainersInner) *NullableWorkloadSpecContainersInner {
	return &NullableWorkloadSpecContainersInner{value: val, isSet: true}
}

func (v NullableWorkloadSpecContainersInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWorkloadSpecContainersInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


