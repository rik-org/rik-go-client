/*
RIK

RESTful public-facing API. The API is accessible through HTTP calls on specific URLs carrying JSON modeled data. 

API version: 0.1.3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the CreateInstanceRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateInstanceRequest{}

// CreateInstanceRequest struct for CreateInstanceRequest
type CreateInstanceRequest struct {
	// Simple helper schema to define an UUID
	WorkloadId string `json:"workload_id"`
	// The name of your instance.
	Name string `json:"name"`
	// The number of instances to deploy.
	Replicas *int32 `json:"replicas,omitempty"`
}

// NewCreateInstanceRequest instantiates a new CreateInstanceRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateInstanceRequest(workloadId string, name string) *CreateInstanceRequest {
	this := CreateInstanceRequest{}
	this.WorkloadId = workloadId
	this.Name = name
	var replicas int32 = 1
	this.Replicas = &replicas
	return &this
}

// NewCreateInstanceRequestWithDefaults instantiates a new CreateInstanceRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateInstanceRequestWithDefaults() *CreateInstanceRequest {
	this := CreateInstanceRequest{}
	var replicas int32 = 1
	this.Replicas = &replicas
	return &this
}

// GetWorkloadId returns the WorkloadId field value
func (o *CreateInstanceRequest) GetWorkloadId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.WorkloadId
}

// GetWorkloadIdOk returns a tuple with the WorkloadId field value
// and a boolean to check if the value has been set.
func (o *CreateInstanceRequest) GetWorkloadIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.WorkloadId, true
}

// SetWorkloadId sets field value
func (o *CreateInstanceRequest) SetWorkloadId(v string) {
	o.WorkloadId = v
}

// GetName returns the Name field value
func (o *CreateInstanceRequest) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *CreateInstanceRequest) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *CreateInstanceRequest) SetName(v string) {
	o.Name = v
}

// GetReplicas returns the Replicas field value if set, zero value otherwise.
func (o *CreateInstanceRequest) GetReplicas() int32 {
	if o == nil || IsNil(o.Replicas) {
		var ret int32
		return ret
	}
	return *o.Replicas
}

// GetReplicasOk returns a tuple with the Replicas field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateInstanceRequest) GetReplicasOk() (*int32, bool) {
	if o == nil || IsNil(o.Replicas) {
		return nil, false
	}
	return o.Replicas, true
}

// HasReplicas returns a boolean if a field has been set.
func (o *CreateInstanceRequest) HasReplicas() bool {
	if o != nil && !IsNil(o.Replicas) {
		return true
	}

	return false
}

// SetReplicas gets a reference to the given int32 and assigns it to the Replicas field.
func (o *CreateInstanceRequest) SetReplicas(v int32) {
	o.Replicas = &v
}

func (o CreateInstanceRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateInstanceRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["workload_id"] = o.WorkloadId
	toSerialize["name"] = o.Name
	if !IsNil(o.Replicas) {
		toSerialize["replicas"] = o.Replicas
	}
	return toSerialize, nil
}

type NullableCreateInstanceRequest struct {
	value *CreateInstanceRequest
	isSet bool
}

func (v NullableCreateInstanceRequest) Get() *CreateInstanceRequest {
	return v.value
}

func (v *NullableCreateInstanceRequest) Set(val *CreateInstanceRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateInstanceRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateInstanceRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateInstanceRequest(val *CreateInstanceRequest) *NullableCreateInstanceRequest {
	return &NullableCreateInstanceRequest{value: val, isSet: true}
}

func (v NullableCreateInstanceRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateInstanceRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


