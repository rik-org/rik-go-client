/*
RIK

RESTful public-facing API. The API is accessible through HTTP calls on specific URLs carrying JSON modeled data. 

API version: 0.1.3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the CreateWorkloadResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateWorkloadResponse{}

// CreateWorkloadResponse struct for CreateWorkloadResponse
type CreateWorkloadResponse struct {
	// Simple helper schema to define an UUID
	Id *string `json:"id,omitempty"`
}

// NewCreateWorkloadResponse instantiates a new CreateWorkloadResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateWorkloadResponse() *CreateWorkloadResponse {
	this := CreateWorkloadResponse{}
	return &this
}

// NewCreateWorkloadResponseWithDefaults instantiates a new CreateWorkloadResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateWorkloadResponseWithDefaults() *CreateWorkloadResponse {
	this := CreateWorkloadResponse{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *CreateWorkloadResponse) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateWorkloadResponse) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *CreateWorkloadResponse) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *CreateWorkloadResponse) SetId(v string) {
	o.Id = &v
}

func (o CreateWorkloadResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateWorkloadResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	return toSerialize, nil
}

type NullableCreateWorkloadResponse struct {
	value *CreateWorkloadResponse
	isSet bool
}

func (v NullableCreateWorkloadResponse) Get() *CreateWorkloadResponse {
	return v.value
}

func (v *NullableCreateWorkloadResponse) Set(val *CreateWorkloadResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateWorkloadResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateWorkloadResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateWorkloadResponse(val *CreateWorkloadResponse) *NullableCreateWorkloadResponse {
	return &NullableCreateWorkloadResponse{value: val, isSet: true}
}

func (v NullableCreateWorkloadResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateWorkloadResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


