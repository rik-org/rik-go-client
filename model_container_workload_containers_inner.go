/*
RIK API

RESTful public-facing API. The API is accessible through HTTP calls on specific URLs carrying JSON modeled data. 

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the ContainerWorkloadContainersInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ContainerWorkloadContainersInner{}

// ContainerWorkloadContainersInner struct for ContainerWorkloadContainersInner
type ContainerWorkloadContainersInner struct {
	Name *string `json:"name,omitempty"`
	Image *string `json:"image,omitempty"`
	Env []ContainerWorkloadContainersInnerEnvInner `json:"env,omitempty"`
	Network *ContainerWorkloadContainersInnerNetwork `json:"network,omitempty"`
}

// NewContainerWorkloadContainersInner instantiates a new ContainerWorkloadContainersInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewContainerWorkloadContainersInner() *ContainerWorkloadContainersInner {
	this := ContainerWorkloadContainersInner{}
	return &this
}

// NewContainerWorkloadContainersInnerWithDefaults instantiates a new ContainerWorkloadContainersInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewContainerWorkloadContainersInnerWithDefaults() *ContainerWorkloadContainersInner {
	this := ContainerWorkloadContainersInner{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ContainerWorkloadContainersInner) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContainerWorkloadContainersInner) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ContainerWorkloadContainersInner) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ContainerWorkloadContainersInner) SetName(v string) {
	o.Name = &v
}

// GetImage returns the Image field value if set, zero value otherwise.
func (o *ContainerWorkloadContainersInner) GetImage() string {
	if o == nil || IsNil(o.Image) {
		var ret string
		return ret
	}
	return *o.Image
}

// GetImageOk returns a tuple with the Image field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContainerWorkloadContainersInner) GetImageOk() (*string, bool) {
	if o == nil || IsNil(o.Image) {
		return nil, false
	}
	return o.Image, true
}

// HasImage returns a boolean if a field has been set.
func (o *ContainerWorkloadContainersInner) HasImage() bool {
	if o != nil && !IsNil(o.Image) {
		return true
	}

	return false
}

// SetImage gets a reference to the given string and assigns it to the Image field.
func (o *ContainerWorkloadContainersInner) SetImage(v string) {
	o.Image = &v
}

// GetEnv returns the Env field value if set, zero value otherwise.
func (o *ContainerWorkloadContainersInner) GetEnv() []ContainerWorkloadContainersInnerEnvInner {
	if o == nil || IsNil(o.Env) {
		var ret []ContainerWorkloadContainersInnerEnvInner
		return ret
	}
	return o.Env
}

// GetEnvOk returns a tuple with the Env field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContainerWorkloadContainersInner) GetEnvOk() ([]ContainerWorkloadContainersInnerEnvInner, bool) {
	if o == nil || IsNil(o.Env) {
		return nil, false
	}
	return o.Env, true
}

// HasEnv returns a boolean if a field has been set.
func (o *ContainerWorkloadContainersInner) HasEnv() bool {
	if o != nil && !IsNil(o.Env) {
		return true
	}

	return false
}

// SetEnv gets a reference to the given []ContainerWorkloadContainersInnerEnvInner and assigns it to the Env field.
func (o *ContainerWorkloadContainersInner) SetEnv(v []ContainerWorkloadContainersInnerEnvInner) {
	o.Env = v
}

// GetNetwork returns the Network field value if set, zero value otherwise.
func (o *ContainerWorkloadContainersInner) GetNetwork() ContainerWorkloadContainersInnerNetwork {
	if o == nil || IsNil(o.Network) {
		var ret ContainerWorkloadContainersInnerNetwork
		return ret
	}
	return *o.Network
}

// GetNetworkOk returns a tuple with the Network field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContainerWorkloadContainersInner) GetNetworkOk() (*ContainerWorkloadContainersInnerNetwork, bool) {
	if o == nil || IsNil(o.Network) {
		return nil, false
	}
	return o.Network, true
}

// HasNetwork returns a boolean if a field has been set.
func (o *ContainerWorkloadContainersInner) HasNetwork() bool {
	if o != nil && !IsNil(o.Network) {
		return true
	}

	return false
}

// SetNetwork gets a reference to the given ContainerWorkloadContainersInnerNetwork and assigns it to the Network field.
func (o *ContainerWorkloadContainersInner) SetNetwork(v ContainerWorkloadContainersInnerNetwork) {
	o.Network = &v
}

func (o ContainerWorkloadContainersInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ContainerWorkloadContainersInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Image) {
		toSerialize["image"] = o.Image
	}
	if !IsNil(o.Env) {
		toSerialize["env"] = o.Env
	}
	if !IsNil(o.Network) {
		toSerialize["network"] = o.Network
	}
	return toSerialize, nil
}

type NullableContainerWorkloadContainersInner struct {
	value *ContainerWorkloadContainersInner
	isSet bool
}

func (v NullableContainerWorkloadContainersInner) Get() *ContainerWorkloadContainersInner {
	return v.value
}

func (v *NullableContainerWorkloadContainersInner) Set(val *ContainerWorkloadContainersInner) {
	v.value = val
	v.isSet = true
}

func (v NullableContainerWorkloadContainersInner) IsSet() bool {
	return v.isSet
}

func (v *NullableContainerWorkloadContainersInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableContainerWorkloadContainersInner(val *ContainerWorkloadContainersInner) *NullableContainerWorkloadContainersInner {
	return &NullableContainerWorkloadContainersInner{value: val, isSet: true}
}

func (v NullableContainerWorkloadContainersInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableContainerWorkloadContainersInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


