/*
RIK API

RESTful public-facing API. The API is accessible through HTTP calls on specific URLs carrying JSON modeled data. 

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the FunctionWorkloadFunction type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FunctionWorkloadFunction{}

// FunctionWorkloadFunction struct for FunctionWorkloadFunction
type FunctionWorkloadFunction struct {
	Execution *FunctionWorkloadFunctionExecution `json:"execution,omitempty"`
}

// NewFunctionWorkloadFunction instantiates a new FunctionWorkloadFunction object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFunctionWorkloadFunction() *FunctionWorkloadFunction {
	this := FunctionWorkloadFunction{}
	return &this
}

// NewFunctionWorkloadFunctionWithDefaults instantiates a new FunctionWorkloadFunction object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFunctionWorkloadFunctionWithDefaults() *FunctionWorkloadFunction {
	this := FunctionWorkloadFunction{}
	return &this
}

// GetExecution returns the Execution field value if set, zero value otherwise.
func (o *FunctionWorkloadFunction) GetExecution() FunctionWorkloadFunctionExecution {
	if o == nil || IsNil(o.Execution) {
		var ret FunctionWorkloadFunctionExecution
		return ret
	}
	return *o.Execution
}

// GetExecutionOk returns a tuple with the Execution field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FunctionWorkloadFunction) GetExecutionOk() (*FunctionWorkloadFunctionExecution, bool) {
	if o == nil || IsNil(o.Execution) {
		return nil, false
	}
	return o.Execution, true
}

// HasExecution returns a boolean if a field has been set.
func (o *FunctionWorkloadFunction) HasExecution() bool {
	if o != nil && !IsNil(o.Execution) {
		return true
	}

	return false
}

// SetExecution gets a reference to the given FunctionWorkloadFunctionExecution and assigns it to the Execution field.
func (o *FunctionWorkloadFunction) SetExecution(v FunctionWorkloadFunctionExecution) {
	o.Execution = &v
}

func (o FunctionWorkloadFunction) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FunctionWorkloadFunction) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Execution) {
		toSerialize["execution"] = o.Execution
	}
	return toSerialize, nil
}

type NullableFunctionWorkloadFunction struct {
	value *FunctionWorkloadFunction
	isSet bool
}

func (v NullableFunctionWorkloadFunction) Get() *FunctionWorkloadFunction {
	return v.value
}

func (v *NullableFunctionWorkloadFunction) Set(val *FunctionWorkloadFunction) {
	v.value = val
	v.isSet = true
}

func (v NullableFunctionWorkloadFunction) IsSet() bool {
	return v.isSet
}

func (v *NullableFunctionWorkloadFunction) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFunctionWorkloadFunction(val *FunctionWorkloadFunction) *NullableFunctionWorkloadFunction {
	return &NullableFunctionWorkloadFunction{value: val, isSet: true}
}

func (v NullableFunctionWorkloadFunction) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFunctionWorkloadFunction) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


