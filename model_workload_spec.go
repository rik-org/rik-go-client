/*
RIK API

RESTful public-facing API. The API is accessible through HTTP calls on specific URLs carrying JSON modeled data. 

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the WorkloadSpec type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &WorkloadSpec{}

// WorkloadSpec struct for WorkloadSpec
type WorkloadSpec struct {
	Containers []WorkloadSpecContainersInner `json:"containers,omitempty"`
}

// NewWorkloadSpec instantiates a new WorkloadSpec object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWorkloadSpec() *WorkloadSpec {
	this := WorkloadSpec{}
	return &this
}

// NewWorkloadSpecWithDefaults instantiates a new WorkloadSpec object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWorkloadSpecWithDefaults() *WorkloadSpec {
	this := WorkloadSpec{}
	return &this
}

// GetContainers returns the Containers field value if set, zero value otherwise.
func (o *WorkloadSpec) GetContainers() []WorkloadSpecContainersInner {
	if o == nil || IsNil(o.Containers) {
		var ret []WorkloadSpecContainersInner
		return ret
	}
	return o.Containers
}

// GetContainersOk returns a tuple with the Containers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkloadSpec) GetContainersOk() ([]WorkloadSpecContainersInner, bool) {
	if o == nil || IsNil(o.Containers) {
		return nil, false
	}
	return o.Containers, true
}

// HasContainers returns a boolean if a field has been set.
func (o *WorkloadSpec) HasContainers() bool {
	if o != nil && !IsNil(o.Containers) {
		return true
	}

	return false
}

// SetContainers gets a reference to the given []WorkloadSpecContainersInner and assigns it to the Containers field.
func (o *WorkloadSpec) SetContainers(v []WorkloadSpecContainersInner) {
	o.Containers = v
}

func (o WorkloadSpec) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o WorkloadSpec) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Containers) {
		toSerialize["containers"] = o.Containers
	}
	return toSerialize, nil
}

type NullableWorkloadSpec struct {
	value *WorkloadSpec
	isSet bool
}

func (v NullableWorkloadSpec) Get() *WorkloadSpec {
	return v.value
}

func (v *NullableWorkloadSpec) Set(val *WorkloadSpec) {
	v.value = val
	v.isSet = true
}

func (v NullableWorkloadSpec) IsSet() bool {
	return v.isSet
}

func (v *NullableWorkloadSpec) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWorkloadSpec(val *WorkloadSpec) *NullableWorkloadSpec {
	return &NullableWorkloadSpec{value: val, isSet: true}
}

func (v NullableWorkloadSpec) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWorkloadSpec) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


