openapi: 3.0.2
info:
  description: |
    RESTful public-facing API.
    The API is accessible through HTTP calls on specific URLs carrying JSON modeled data.
  title: RIK
  version: 0.1.5
servers:
- url: /
paths:
  /api/v0/workloads.list:
    get:
      description: Retrieve a list of all the active workloads in the cluster.
      operationId: get-workloads
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetWorkloadsResponse'
          description: A JSON array of all the workloads.
      summary: List all the workloads available in the cluster
      tags:
      - Workloads
  /api/v0/workloads.create:
    post:
      description: Create a new workload
      operationId: create-workload
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateWorkloadRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/create_workload_200_response'
          description: Successful Response
      summary: Create a new workload
      tags:
      - Workloads
  /api/v0/workloads.delete:
    post:
      description: Delete a workload
      operationId: delete-workload
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Metadata'
      responses:
        "200":
          description: Successful Response
      tags:
      - Workloads
  /api/v0/instances.list:
    get:
      description: List all instances
      operationId: get-instances
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/get_instances_200_response'
          description: OK
      tags:
      - Instances
  /api/v0/workloads.instances/{workloadId}:
    get:
      description: Retrieve the list of instances for the given workload.
      operationId: get-workload-instances
      parameters:
      - explode: false
        in: path
        name: workloadId
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetWorkloadInstancesResponse'
          description: Workload has been found and it has instances
        "204":
          description: Workload has been found but it has no instances yet
        "404":
          description: Workload has not been found
        "400":
          description: Workload ID is not provided
      summary: Get all the instances for the given workload
      tags:
      - Instances
  /api/v0/instances.create:
    post:
      description: Create a new instance for a given workload.
      operationId: create-workload-instance
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateInstanceRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateInstanceResponse'
          description: The instances were successfully scheduled.
      summary: Create a new instance for a given workload
      tags:
      - Instances
  /api/v0/instances.delete:
    post:
      description: Delete an instance
      operationId: delete-instance
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/delete_instance_request'
      responses:
        "200":
          description: Successful Response
      tags:
      - Instances
components:
  schemas:
    GetWorkloadsResponse:
      items:
        $ref: '#/components/schemas/GetWorkloadsResponse_inner'
      type: array
    CreateWorkloadRequest:
      $ref: '#/components/schemas/Workload'
    CreateWorkloadResponse:
      properties:
        id:
          description: Simple helper schema to define an UUID
          example: c540eaf0-e41b-4de8-bbda-d1c815443b6e
          type: string
      type: object
    CreateInstanceRequest:
      example:
        replicas: 1
        name: my-super-instance-of-my-workload
        workload_id: c540eaf0-e41b-4de8-bbda-d1c815443b6e
      properties:
        workload_id:
          description: Simple helper schema to define an UUID
          example: c540eaf0-e41b-4de8-bbda-d1c815443b6e
          type: string
        name:
          description: The name of your instance.
          example: my-super-instance-of-my-workload
          type: string
        replicas:
          default: 1
          description: The number of instances to deploy.
          example: 1
          type: integer
      required:
      - workload_id
      type: object
    CreateInstanceResponse:
      items:
        example: my-instance-name
        type: string
      type: array
    GetInstancesResponse:
      items:
        $ref: '#/components/schemas/GetInstancesResponse_inner'
      type: array
    GetWorkloadInstancesResponse:
      example:
        instances:
        - kind: null
          namespace: default
          id: c540eaf0-e41b-4de8-bbda-d1c815443b6e
          workload_id: c540eaf0-e41b-4de8-bbda-d1c815443b6e
          spec:
            function: null
            containers:
            - image: ubuntu:latest
              name: ubuntu-container
            - image: ubuntu:latest
              name: ubuntu-container
          status: null
        - kind: null
          namespace: default
          id: c540eaf0-e41b-4de8-bbda-d1c815443b6e
          workload_id: c540eaf0-e41b-4de8-bbda-d1c815443b6e
          spec:
            function: null
            containers:
            - image: ubuntu:latest
              name: ubuntu-container
            - image: ubuntu:latest
              name: ubuntu-container
          status: null
      properties:
        instances:
          items:
            $ref: '#/components/schemas/Instance'
          type: array
      type: object
    UUID:
      description: Simple helper schema to define an UUID
      example: c540eaf0-e41b-4de8-bbda-d1c815443b6e
      type: string
    Metadata:
      description: The metadata of a workload.
      example:
        name: name
        id: c540eaf0-e41b-4de8-bbda-d1c815443b6e
      properties:
        id:
          description: Simple helper schema to define an UUID
          example: c540eaf0-e41b-4de8-bbda-d1c815443b6e
          type: string
        name:
          type: string
      type: object
    Kind:
      description: The kind of a workload.
      enum:
      - Pod
      - Function
      type: string
    Status:
      description: The status of a workload instance.
      enum:
      - Running
      - Pending
      - Failed
      - Terminated
      - Creating
      - Destroying
      type: string
    Container:
      description: The specification to define a container inside a workload.
      example:
        image: ubuntu:latest
        name: ubuntu-container
      properties:
        name:
          example: ubuntu-container
          type: string
        image:
          example: ubuntu:latest
          type: string
      type: object
    Function:
      description: The specification to define a function inside a workload.
      example:
        execution:
          rootfs: https://s3.amazonaws.com/spec.ccfc.min/img/quickstart_guide/aarch64/rootfs/bionic.rootfs.ext4
      properties:
        execution:
          $ref: '#/components/schemas/Function_execution'
      type: object
    Workload:
      example:
        apiVersion: v1
        kind: null
        name: my-super-workload
        spec:
          function:
            execution:
              rootfs: https://s3.amazonaws.com/spec.ccfc.min/img/quickstart_guide/aarch64/rootfs/bionic.rootfs.ext4
          containers:
          - image: ubuntu:latest
            name: ubuntu-container
          - image: ubuntu:latest
            name: ubuntu-container
      properties:
        apiVersion:
          example: v1
          type: string
        kind:
          $ref: '#/components/schemas/Kind'
        name:
          example: my-super-workload
          type: string
        spec:
          $ref: '#/components/schemas/Workload_spec'
      type: object
    Instance:
      example:
        kind: null
        namespace: default
        id: c540eaf0-e41b-4de8-bbda-d1c815443b6e
        workload_id: c540eaf0-e41b-4de8-bbda-d1c815443b6e
        spec:
          function: null
          containers:
          - image: ubuntu:latest
            name: ubuntu-container
          - image: ubuntu:latest
            name: ubuntu-container
        status: null
      properties:
        id:
          description: Simple helper schema to define an UUID
          example: c540eaf0-e41b-4de8-bbda-d1c815443b6e
          type: string
        kind:
          $ref: '#/components/schemas/Kind'
        status:
          $ref: '#/components/schemas/Status'
        workload_id:
          description: Simple helper schema to define an UUID
          example: c540eaf0-e41b-4de8-bbda-d1c815443b6e
          type: string
        namespace:
          example: default
          type: string
        spec:
          $ref: '#/components/schemas/Instance_spec'
      type: object
    create_workload_200_response:
      oneOf:
      - $ref: '#/components/schemas/CreateWorkloadResponse'
    get_instances_200_response:
      properties:
        instances:
          items:
            $ref: '#/components/schemas/GetInstancesResponse'
          type: array
      type: object
    delete_instance_request:
      properties:
        id:
          example: 28dcac69-33ef-4b13-a42f-0d07c7acc1a6
          type: string
      type: object
    GetWorkloadsResponse_inner_allOf:
      properties:
        value:
          $ref: '#/components/schemas/Workload'
      type: object
    GetWorkloadsResponse_inner:
      allOf:
      - $ref: '#/components/schemas/Metadata'
      - $ref: '#/components/schemas/GetWorkloadsResponse_inner_allOf'
      type: object
    GetInstancesResponse_inner_allOf:
      properties:
        value:
          $ref: '#/components/schemas/Instance'
      type: object
    GetInstancesResponse_inner:
      allOf:
      - $ref: '#/components/schemas/Metadata'
      - $ref: '#/components/schemas/GetInstancesResponse_inner_allOf'
      type: object
    Function_execution:
      example:
        rootfs: https://s3.amazonaws.com/spec.ccfc.min/img/quickstart_guide/aarch64/rootfs/bionic.rootfs.ext4
      properties:
        rootfs:
          example: https://s3.amazonaws.com/spec.ccfc.min/img/quickstart_guide/aarch64/rootfs/bionic.rootfs.ext4
          type: string
      type: object
    Workload_spec:
      description: The specification of your workload.
      example:
        function:
          execution:
            rootfs: https://s3.amazonaws.com/spec.ccfc.min/img/quickstart_guide/aarch64/rootfs/bionic.rootfs.ext4
        containers:
        - image: ubuntu:latest
          name: ubuntu-container
        - image: ubuntu:latest
          name: ubuntu-container
      properties:
        function:
          $ref: '#/components/schemas/Function'
        containers:
          items:
            $ref: '#/components/schemas/Container'
          type: array
      type: object
    Instance_spec_function_allOf_exposure:
      properties:
        port:
          example: 47008
          type: integer
        targetPort:
          example: 8080
          type: integer
        type:
          example: NodePort
          type: string
      type: object
    Instance_spec_function_allOf:
      properties:
        exposure:
          $ref: '#/components/schemas/Instance_spec_function_allOf_exposure'
      type: object
    Instance_spec_function:
      allOf:
      - $ref: '#/components/schemas/Function'
      - $ref: '#/components/schemas/Instance_spec_function_allOf'
      type: object
    Instance_spec:
      example:
        function: null
        containers:
        - image: ubuntu:latest
          name: ubuntu-container
        - image: ubuntu:latest
          name: ubuntu-container
      properties:
        containers:
          items:
            $ref: '#/components/schemas/Container'
          type: array
        function:
          $ref: '#/components/schemas/Instance_spec_function'
      type: object
